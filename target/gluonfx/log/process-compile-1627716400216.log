Process
=======
compile

Command Line
============
D:\Programs\graalvm-svm-windows-gluon-21.2.0-dev\bin\native-image.cmd "-Djdk.internal.lambda.eagerlyInitialize=false" --no-server -H:+ExitAfterRelocatableImageWrite -H:+SharedLibrary -H:+AddAllCharsets -H:+ReportExceptionStackTraces -H:-DeadlockWatchdogExitOnTimeout "-H:DeadlockWatchdogInterval=0" -H:+RemoveSaturatedTypeFlows "--features=org.graalvm.home.HomeFinderFeature" "-H:TempDirectory=D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\tmp" "-H:EnableURLProtocols=http,https" "-H:ReflectionConfigurationFiles=D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\reflectionconfig-x86_64-windows.json" "-H:JNIConfigurationFiles=D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\jniconfig-x86_64-windows.json" "-H:ResourceConfigurationFiles=D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\resourceconfig-x86_64-windows.json" "-H:IncludeResourceBundles=com/sun/javafx/scene/control/skin/resources/controls,com/sun/javafx/scene/control/skin/resources/controls-nt,com.sun.javafx.tk.quantum.QuantumMessagesBundle" "-Dsvm.platform=org.graalvm.nativeimage.Platform$WINDOWS_AMD64" -cp "D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\tmp\classpathJar.jar" com.maqboolsolutions.flywaygraalvmtest.Main

Output
======
Warning: Ignoring server-mode native-image argument --no-server.
[com.maqboolsolutions.flywaygraalvmtest.main:13328]    classlist:  10,430.21 ms,  0.96 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]        (cap):  10,397.51 ms,  0.96 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]        setup:  15,228.68 ms,  0.96 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]     (clinit):   1,236.23 ms,  4.09 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]   (typeflow):  94,674.91 ms,  4.09 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]    (objects):  39,470.02 ms,  4.09 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]   (features):   7,487.85 ms,  4.09 GB
[com.maqboolsolutions.flywaygraalvmtest.main:13328]     analysis: 146,010.13 ms,  4.09 GB
Warning: Aborting stand-alone image build. Unsupported features in 3 methods
Detailed message:
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.flywaydb.core.internal.scanner.classpath.jboss.JBossVFSv3ClassPathLocationScanner.<init>(). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(ClassPathScanner.java:312)
Call path from entry point to org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(String): 
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(ClassPathScanner.java:291)
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.findResourceNamesAndParentURLs(ClassPathScanner.java:135)
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.<init>(ClassPathScanner.java:79)
	at org.flywaydb.core.internal.scanner.ClasspathClassScanner.scanForType(ClasspathClassScanner.java:37)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.loadCallbackLocation(ClassicConfiguration.java:1326)
	at org.flywaydb.core.Flyway.<init>(Flyway.java:139)
	at org.flywaydb.core.api.configuration.FluentConfiguration.load(FluentConfiguration.java:58)
	at com.maqboolsolutions.flywaygraalvmtest.Main.lambda$start$0(Main.java:65)
	at com.oracle.svm.reflect.Main_lambda$start$0_6a8897dbe89f446602f9293037a42f0a6f75ffa5_164.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)
	at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)
	at java.util.ServiceLoader$3.next(ServiceLoader.java:1395)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_util_Iterator_2_0002enext_00028_00029Ljava_lang_Object_2(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.flywaydb.core.internal.scanner.cloud.s3.AwsS3Scanner.<init>(java.nio.charset.Charset, boolean). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.scanner.Scanner.<init>(Scanner.java:93)
Call path from entry point to org.flywaydb.core.internal.scanner.Scanner.<init>(Class, Collection, ClassLoader, Charset, boolean, boolean, ResourceNameCache, LocationScannerCache, boolean): 
	at org.flywaydb.core.internal.scanner.Scanner.<init>(Scanner.java:66)
	at org.flywaydb.core.Flyway.createResourceAndClassProviders(Flyway.java:634)
	at org.flywaydb.core.Flyway.execute(Flyway.java:497)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:172)
	at com.maqboolsolutions.flywaygraalvmtest.Main.lambda$start$0(Main.java:66)
	at com.oracle.svm.reflect.Main_lambda$start$0_6a8897dbe89f446602f9293037a42f0a6f75ffa5_164.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)
	at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)
	at java.util.ServiceLoader$3.next(ServiceLoader.java:1395)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_util_Iterator_2_0002enext_00028_00029Ljava_lang_Object_2(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: oracle.jdbc.OracleConnection. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(OracleDatabaseType.java:213)
Call path from entry point to org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(Connection, Configuration): 
	at org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(OracleDatabaseType.java:206)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.openConnection(JdbcConnectionFactory.java:136)
	at org.flywaydb.core.internal.database.base.Database.getMigrationConnection(Database.java:273)
	at org.flywaydb.core.internal.callback.DefaultCallbackExecutor.onMigrateOrUndoEvent(DefaultCallbackExecutor.java:73)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:150)
	at org.flywaydb.core.internal.command.DbMigrate$$Lambda$1141/0x00000007c1697440.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_Runnable_2_0002erun_00028_00029V(generated:0)

com.oracle.svm.hosted.FallbackFeature$FallbackImageRequest: Aborting stand-alone image build. Unsupported features in 3 methods
Detailed message:
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.flywaydb.core.internal.scanner.classpath.jboss.JBossVFSv3ClassPathLocationScanner.<init>(). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(ClassPathScanner.java:312)
Call path from entry point to org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(String): 
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(ClassPathScanner.java:291)
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.findResourceNamesAndParentURLs(ClassPathScanner.java:135)
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.<init>(ClassPathScanner.java:79)
	at org.flywaydb.core.internal.scanner.ClasspathClassScanner.scanForType(ClasspathClassScanner.java:37)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.loadCallbackLocation(ClassicConfiguration.java:1326)
	at org.flywaydb.core.Flyway.<init>(Flyway.java:139)
	at org.flywaydb.core.api.configuration.FluentConfiguration.load(FluentConfiguration.java:58)
	at com.maqboolsolutions.flywaygraalvmtest.Main.lambda$start$0(Main.java:65)
	at com.oracle.svm.reflect.Main_lambda$start$0_6a8897dbe89f446602f9293037a42f0a6f75ffa5_164.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)
	at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)
	at java.util.ServiceLoader$3.next(ServiceLoader.java:1395)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_util_Iterator_2_0002enext_00028_00029Ljava_lang_Object_2(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.flywaydb.core.internal.scanner.cloud.s3.AwsS3Scanner.<init>(java.nio.charset.Charset, boolean). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.scanner.Scanner.<init>(Scanner.java:93)
Call path from entry point to org.flywaydb.core.internal.scanner.Scanner.<init>(Class, Collection, ClassLoader, Charset, boolean, boolean, ResourceNameCache, LocationScannerCache, boolean): 
	at org.flywaydb.core.internal.scanner.Scanner.<init>(Scanner.java:66)
	at org.flywaydb.core.Flyway.createResourceAndClassProviders(Flyway.java:634)
	at org.flywaydb.core.Flyway.execute(Flyway.java:497)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:172)
	at com.maqboolsolutions.flywaygraalvmtest.Main.lambda$start$0(Main.java:66)
	at com.oracle.svm.reflect.Main_lambda$start$0_6a8897dbe89f446602f9293037a42f0a6f75ffa5_164.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)
	at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)
	at java.util.ServiceLoader$3.next(ServiceLoader.java:1395)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_util_Iterator_2_0002enext_00028_00029Ljava_lang_Object_2(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: oracle.jdbc.OracleConnection. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(OracleDatabaseType.java:213)
Call path from entry point to org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(Connection, Configuration): 
	at org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(OracleDatabaseType.java:206)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.openConnection(JdbcConnectionFactory.java:136)
	at org.flywaydb.core.internal.database.base.Database.getMigrationConnection(Database.java:273)
	at org.flywaydb.core.internal.callback.DefaultCallbackExecutor.onMigrateOrUndoEvent(DefaultCallbackExecutor.java:73)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:150)
	at org.flywaydb.core.internal.command.DbMigrate$$Lambda$1141/0x00000007c1697440.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_Runnable_2_0002erun_00028_00029V(generated:0)

	at com.oracle.svm.hosted.FallbackFeature.reportFallback(FallbackFeature.java:225)
	at com.oracle.svm.hosted.FallbackFeature.reportAsFallback(FallbackFeature.java:235)
	at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:764)
	at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:532)
	at com.oracle.svm.hosted.NativeImageGenerator.run(NativeImageGenerator.java:491)
	at com.oracle.svm.hosted.NativeImageGeneratorRunner.buildImage(NativeImageGeneratorRunner.java:380)
	at com.oracle.svm.hosted.NativeImageGeneratorRunner.build(NativeImageGeneratorRunner.java:543)
	at com.oracle.svm.hosted.NativeImageGeneratorRunner.main(NativeImageGeneratorRunner.java:119)
	at com.oracle.svm.hosted.NativeImageGeneratorRunner$JDK9Plus.main(NativeImageGeneratorRunner.java:573)
Caused by: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: Unsupported features in 3 methods
Detailed message:
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.flywaydb.core.internal.scanner.classpath.jboss.JBossVFSv3ClassPathLocationScanner.<init>(). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(ClassPathScanner.java:312)
Call path from entry point to org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(String): 
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.createLocationScanner(ClassPathScanner.java:291)
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.findResourceNamesAndParentURLs(ClassPathScanner.java:135)
	at org.flywaydb.core.internal.scanner.classpath.ClassPathScanner.<init>(ClassPathScanner.java:79)
	at org.flywaydb.core.internal.scanner.ClasspathClassScanner.scanForType(ClasspathClassScanner.java:37)
	at org.flywaydb.core.api.configuration.ClassicConfiguration.loadCallbackLocation(ClassicConfiguration.java:1326)
	at org.flywaydb.core.Flyway.<init>(Flyway.java:139)
	at org.flywaydb.core.api.configuration.FluentConfiguration.load(FluentConfiguration.java:58)
	at com.maqboolsolutions.flywaygraalvmtest.Main.lambda$start$0(Main.java:65)
	at com.oracle.svm.reflect.Main_lambda$start$0_6a8897dbe89f446602f9293037a42f0a6f75ffa5_164.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)
	at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)
	at java.util.ServiceLoader$3.next(ServiceLoader.java:1395)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_util_Iterator_2_0002enext_00028_00029Ljava_lang_Object_2(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: org.flywaydb.core.internal.scanner.cloud.s3.AwsS3Scanner.<init>(java.nio.charset.Charset, boolean). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.scanner.Scanner.<init>(Scanner.java:93)
Call path from entry point to org.flywaydb.core.internal.scanner.Scanner.<init>(Class, Collection, ClassLoader, Charset, boolean, boolean, ResourceNameCache, LocationScannerCache, boolean): 
	at org.flywaydb.core.internal.scanner.Scanner.<init>(Scanner.java:66)
	at org.flywaydb.core.Flyway.createResourceAndClassProviders(Flyway.java:634)
	at org.flywaydb.core.Flyway.execute(Flyway.java:497)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:172)
	at com.maqboolsolutions.flywaygraalvmtest.Main.lambda$start$0(Main.java:66)
	at com.oracle.svm.reflect.Main_lambda$start$0_6a8897dbe89f446602f9293037a42f0a6f75ffa5_164.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Method.java:566)
	at java.util.ServiceLoader$ProviderImpl.invokeFactoryMethod(ServiceLoader.java:737)
	at java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:720)
	at java.util.ServiceLoader$3.next(ServiceLoader.java:1395)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_util_Iterator_2_0002enext_00028_00029Ljava_lang_Object_2(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: oracle.jdbc.OracleConnection. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(OracleDatabaseType.java:213)
Call path from entry point to org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(Connection, Configuration): 
	at org.flywaydb.core.internal.database.oracle.OracleDatabaseType.alterConnectionAsNeeded(OracleDatabaseType.java:206)
	at org.flywaydb.core.internal.jdbc.JdbcConnectionFactory.openConnection(JdbcConnectionFactory.java:136)
	at org.flywaydb.core.internal.database.base.Database.getMigrationConnection(Database.java:273)
	at org.flywaydb.core.internal.callback.DefaultCallbackExecutor.onMigrateOrUndoEvent(DefaultCallbackExecutor.java:73)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:150)
	at org.flywaydb.core.internal.command.DbMigrate$$Lambda$1141/0x00000007c1697440.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at com.oracle.svm.jni.JNIJavaCallWrappers.jniInvoke_VARARGS:Ljava_lang_Runnable_2_0002erun_00028_00029V(generated:0)

	at com.oracle.graal.pointsto.constraints.UnsupportedFeatures.report(UnsupportedFeatures.java:129)
	at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:761)
	... 6 more
[com.maqboolsolutions.flywaygraalvmtest.main:13328]      [total]: 172,650.16 ms,  4.09 GB
# Printing build artifacts to: D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\FlywayOnGraalVMNativeImageTest\com.maqboolsolutions.flywaygraalvmtest.main.build_artifacts.txt
[com.maqboolsolutions.flywaygraalvmtest.main:11892]    classlist:   8,378.32 ms,  0.96 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]        (cap):  17,491.65 ms,  0.96 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]        setup:  31,948.03 ms,  0.96 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]     (clinit):     286.85 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]   (typeflow):  17,034.21 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]    (objects):   6,315.43 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]   (features):     668.94 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]     analysis:  24,645.30 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]     universe:   1,538.31 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]      (parse):   1,168.07 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]     (inline):   1,681.24 ms,  1.50 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]    (compile):  15,236.54 ms,  2.57 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]      compile:  19,045.35 ms,  2.57 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]        image:   2,902.93 ms,  2.57 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]        write:   2,389.55 ms,  2.57 GB
[com.maqboolsolutions.flywaygraalvmtest.main:11892]      [total]:  99,349.37 ms,  2.57 GB
# Printing build artifacts to: D:\NetBeansProjects\git-projects\Flyway-On-GraalVM-NativeImage-Test\target\gluonfx\x86_64-windows\gvm\FlywayOnGraalVMNativeImageTest\com.maqboolsolutions.flywaygraalvmtest.main.build_artifacts.txt
Warning: Image 'com.maqboolsolutions.flywaygraalvmtest.main' is a fallback image that requires a JDK for execution (use --no-fallback to suppress fallback image generation and to print more detailed information why a fallback image was necessary).


Result
======
result: 0